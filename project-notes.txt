ColorsInteract
=========================

- Small-ish board.
- Bunch of shapes that are colors. They can move around but not off of the board.
- When they overlap they become less opaque so you can see the mix of colors in the overlapping region
- start with squares but want to be able to put other shapes in too.
- Server should just manage the game-state between the clients.
- Clients should handle all of the drawing. 
- Clents only react to new info from the server. E.G. I move, don't move immediately, wait for info to come from server.  



Phase One
=========================
- Get multiple clients receiving information from eachother in real time (via the server)
  - Probably just text for now

Phase Two
=========================
- Lay out game state communication rules
  - Server needs to have all the current game state info to give to new clients
  - Start with server just marking game-state as dirty, telling all the clients "hey, I have new stuff. so scrap everything you had and rebuild using this new info"
    - Probably do that with a game-state timestamp and just check on the client for newer stuff
  - Not really a good way to share types between the server and the client so I'll have that seperate. Have the server stuff focus on values not operations.
  - Get the clients/server communicating gamestate changes. No actual client drawing yet.


Phase Three
=========================
 - Client side.
 - Read the server messages into client side Game state / chat state objects
 - Paint the board



Don't Forget To... 
=========================
- [COMPLETE] Check that name is not null on update player name
- [COMPLETE] Remove player/piece when connection closes
- [COMPLETE] adjust speed of movement (move more than a unit at a time)
- Add button to rejoin
- maybe space makes you bigger
- [COMPLETE] get server to return index.html so I can browse to it from another machine.
- [COMPLETE] Show names
- Add chat
- [Complete] board should be live in the back while name prompt is up (it is but it needs to get started)
- show latency (maybe not all of these) (might need some sort of token to know the response is for the action YOU sent in)
  - my immediate latency
  - my average latency
  - server immediate average latency
  - server average overal average latency
- [COMPLETE] some simple instructions to user arrow keys for moving the block around
  - maybe a nice greenish banner right below the canvas that fades away after a timeout?
- pretty up name input



Local network setup for testing
=========================
This works. Not sure why yet.
- node is serving @ 0.0.0.0:8080
  - ex: httpServer.listen(8080, '0.0.0.0', function(){logStuff('Server running at 0.0.0.0:8080');});
- Machine running node can navigate to application via localhost:8080 or 127.0.0.1:8080 or (own ip):8080
- iPad can navigate to application via (serving machines network ip):8080
  - ex 192.168.1.11:8080
- can find machines network ip by opening powershell typing IPConfig and looking for IPv4 address
- html page web socket needs to be hardcoded to server ip 
  - ex: var ws = new WebSocket('ws://192.168.1.11:8080', 'echo-protocol');